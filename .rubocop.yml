require: rubocop-performance

# Customize rules
Documentation:
  Description: "Document classes and non-namespace modules."
  Enabled: false

Style/FrozenStringLiteralComment:
  Description: >-
    Add the frozen_string_literal comment to the top of files
    to help transition from Ruby 2.3.0 to Ruby 3.0.
  Enabled: false

# Length metrics are disabled
Metrics/LineLength:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Style/PercentLiteralDelimiters:
  Description: "No unnecessary spaces inside delimiters of %i/%w/%x literals."
  PreferredDelimiters:
    '%w': ()
    '%i': ()

Style/SymbolArray:
  Description: "Use %i or %I for arrays of symbols."
  Enabled: true

Style/MixinUsage:
  Enabled: false

Style/Lambda:
  Description: "Checks for spaces in lambda literals."
  Enabled: false

ClassAndModuleChildren:
  Description: "Checks style of children classes and modules."
  Enabled: false

Style/RegexpLiteral:
  Description: "Use / or %r around regular expressions."
  Enabled: false

Style/SpecialGlobalVars:
  Description: "Avoid Perl-style global variables."
  Enabled: false

Metrics/AbcSize:
  Description: >-
    A calculated magnitude based on number of assignments,
    branches, and conditions.
  Enabled: false

Naming/FileName:
  Description: "Use snake_case for source file names."
  Enabled: false

Metrics/PerceivedComplexity:
  Description: >-
    A complexity metric geared towards measuring complexity for a
    human reader.
  Enabled: false

Metrics/CyclomaticComplexity:
  Description: >-
    A complexity metric that is strongly correlated to the number
    of test cases needed to validate a method.
  Enabled: false

Style/StringLiterals:
  Description: "Checks if uses of quotes match the configured preference."
  EnforcedStyle: double_quotes

Style/StringLiteralsInInterpolation:
  Description: >-
    Checks if uses of quotes inside expressions in interpolated
    strings match the configured preference.
  EnforcedStyle: double_quotes

Style/RescueModifier:
  Description: "Avoid using rescue in its modifier form."
  Enabled: false

Lint/AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  Enabled: false

Lint/UnderscorePrefixedVariableName:
  Description: "Do not use prefix `_` for a variable that is used."
  Enabled: false

Style/GuardClause:
  Description: "Check for conditionals that can be replaced with guard clauses"
  Enabled: false

Lint/UselessAssignment:
  Description: "Checks for useless assignment to a local variable."
  Enabled: false

Naming/VariableNumber:
  Description: "Use the configured style when numbering variables."
  Enabled: false

Performance/EndWith:
  Description: "Use `end_with?` instead of a regex match anchored to the end of a string."
  Enabled: false

Performance/StartWith:
  Description: "Use `start_with?` instead of a regex match anchored to the beginning of a string."
  Enabled: false

Performance/RegexpMatch:
  Description: "Use `match?` instead of `%<current>s` when `MatchData` is not used"
  Enabled: false

Style/NumericPredicate:
  Description: >-
    Checks for the use of predicate- or comparison methods for
    numeric comparisons.
  EnforcedStyle: comparison
  AutoCorrect: true

Lint/HandleExceptions:
  Description: "Don't suppress exception."
  Enabled: false

Style/IdenticalConditionalBranches:
  Description: >-
    Checks that conditional statements do not have an identical
    line at the end of each branch, which can validly be moved
    out of the conditional.
  Enabled: false

Lint/ShadowingOuterLocalVariable:
  Description: >-
    Do not use the same name as outer local variable
    for block arguments or block local variables.
  Enabled: false

Lint/NonLocalExitFromIterator:
  Description: "Do not use return in iterator to cause non-local exit."
  Enabled: false

Style/ClassVars:
  Description: "Avoid the use of class variables."
  Enabled: false

Layout/EndAlignment:
  Description: "Align ends correctly."
  Enabled: false

Layout/DefEndAlignment:
  Description: "Align ends corresponding to defs correctly."
  Enabled: false

Style/GlobalVars:
  Description: "Do not introduce global variables."
  Enabled: false

Lint/SafeNavigationChain:
  Description: "Do not chain ordinary method call after safe navigation operator."
  Enabled: false

Style/DoubleNegation:
  Description: "Checks for uses of double negation (!!)."
  Enabled: false

Performance/Caller:
  Description: >-
    Use `caller(n..n)` instead of `caller`.
  Enabled: false

Style/MultipleComparison:
  Description: >-
    Avoid comparing a variable with multiple items in a conditional,
    use Array#include? instead.
  Enabled: false

Lint/NestedMethodDefinition:
  Description: "Do not use nested method definitions."
  Enabled: false

Style/CommentAnnotation:
  Description: >-
    Checks formatting of special comments
    (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: false

Style/AsciiComments:
  Description: "Use only ascii symbols in comments."
  Enabled: false

Lint/DuplicateMethods:
  Description: "Check for duplicate method definitions."
  Enabled: false

Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: false

Style/CaseEquality:
  Description: "Avoid explicit use of the case equality operator(===)."
  Enabled: false

Metrics/BlockNesting:
  Description: "Avoid excessive block nesting"
  Enabled: false

Style/NestedTernaryOperator:
  Description: "Use one expression per branch in a ternary operator."
  Enabled: false

Style/IfInsideElse:
  Description: "Finds if nodes inside else, which can be converted to elsif."
  Enabled: false

Style/CharacterLiteral:
  Description: "Checks for uses of character literals."
  Enabled: false

Lint/Void:
  Description: "Possible use of operator/literal/variable in void context."
  Enabled: false

Lint/RequireParentheses:
  Description: >-
    Use parentheses in the method call to avoid confusion
    about precedence.
  Enabled: false

Style/MultilineBlockChain:
  StyleGuide: "#single-line-blocks"
  Enabled: false

Lint/UnreachableCode:
  Description: "Unreachable code."
  Enabled: false

Lint/UselessAccessModifier:
  Description: "Checks for useless access modifiers."
  Enabled: false

Lint/IneffectiveAccessModifier:
  Description: >-
    Checks for attempts to use `private` or `protected` to set
    the visibility of a class method, which does not work.
  Enabled: false

Lint/ParenthesesAsGroupedExpression:
  Description: >-
    Checks for method calls with a space before the opening
    parenthesis.
  Enabled: false

Naming/PredicateName:
  Description: "Check the names of predicate methods."
  Enabled: false

Style/ParallelAssignment:
  Description: >-
    Check for simple usages of parallel assignment.
    It will only warn when the number of variables
    matches on both sides of the assignment.
  Enabled: false

Style/DateTime:
  Description: 'Use Date or Time over DateTime.' # https://bugs.ruby-lang.org/issues/14862
  StyleGuide: '#date--time'
  Enabled: false

Security/Open:
  Description: "The use of `Kernel#open` is a serious security risk."
  Enabled: false

Lint/UriEscapeUnescape:
  Description: >-
    `%<uri_method>s` method is obsolete and should not be used.
    Instead, use %<replacements>s depending on your specific use
    case.
  Enabled: false
